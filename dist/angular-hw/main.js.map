{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/course.model.client.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/hello-world-two/hello-world-two.component.css","webpack:///./src/app/hello-world-two/hello-world-two.component.html","webpack:///./src/app/hello-world-two/hello-world-two.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Course {\n  id: number;\n  title: string;\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HelloWorldTwoComponent } from './hello-world-two/hello-world-two.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport {CourseNavigatorServiceClient} from './services/course-navigator.service.client';\nimport {CourseServiceClient} from './services/course.service.client';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport { routing } from './app.routing';\nimport {FormsModule} from '@angular/forms';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport {SectionServiceClient} from './services/section.service.client';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldTwoComponent,\n    WhiteBoardComponent,\n    CourseNavigatorComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionListComponent} from './section-list/section-list.component';\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: WhiteBoardComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: 'course/:courseId', component: CourseViewerComponent },\n  { path: 'course/:courseId/section', component: SectionListComponent },\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\n  { path: '**', component: WhiteBoardComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".card {\\n  margin-bottom: 15px;\\n}\\n\"","module.exports = \"<h2>Courses</h2>\\n\\n<div class=\\\"row\\\">\\n\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n\\n    <div class=\\\"card\\\">\\n\\n      <div class=\\\"card-body\\\">\\n\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n\\n        <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\n\\n        <a routerLink=\\\"/course/{{course.id}}\\\" class=\\\"btn btn-primary\\\">Enter</a>\\n\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\" class=\\\"btn btn-success float-right\\\">Enroll</a>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../Models/course.model.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) { }\n  courses: Course[] = [];\n\n  ngOnInit() {\n   this.service.findAllCourses()\n     .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \".list-group-item.active.webdev {\\n  z-index: 2;\\n  color: #fff;\\n  background-color: #00a8ff;\\n  border-color: #00a8ff;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Navigator</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group \\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Courses</li>\\n        <li class=\\\"list-group-item webdev\\\"\\n            *ngFor=\\\"let course of courses\\\"\\n            (click)='selectCourse(course.id)'\\n            [ngClass]=\\\"{'active': course.id === selectedCourseId}\\\">\\n          {{course.title}}</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Modules </li>\\n        <li class=\\\"list-group-item webdev\\\"\\n            (click)=\\\"selectModule(module.id)\\\"\\n            [ngClass]=\\\"{'active': module.id === selectedModuleId}\\\"\\n            *ngFor=\\\"let module of modules\\\">\\n          {{module.title}} </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Lessons\\n        </li>\\n        <li (click)=\\\"selectLesson(lesson.id)\\\"\\n            [ngClass]=\\\"{'active': lesson.id === selectedLessonId}\\\"\\n            class=\\\"list-group-item webdev\\\"\\n            *ngFor=\\\"let lesson of lessons\\\">\\n          {{lesson.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Widgets\\n        </li>\\n        <li class=\\\"list-group-item\\\"\\n            *ngFor=\\\"let widget of widgets\\\">\\n          {{widget.title}}\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from '../services/course-navigator.service.client';\n\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n  courses = [];\n  modules = [];\n  lessons = [];\n  widgets = [];\n  selectedCourseId = 0;\n  selectedModuleId = 0;\n  selectedLessonId = 0;\n  constructor(private service: CourseNavigatorServiceClient) { }\n\n  selectCourse(courseId) {\n    this.selectedCourseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules =>\n        this.modules = modules);\n  }\n  selectModule(moduleId) {\n    this.selectedModuleId = moduleId;\n    this.service.findLessonsForModule(moduleId)\n      .then(lessons => {\n        this.lessons = lessons;\n      });\n  }\n  selectLesson(lessonId) {\n    this.selectedLessonId = lessonId;\n    this.service.findWidgetsForLesson(lessonId)\n      .then(widgets => {\n        this.widgets = widgets;\n      });\n  }\n\n\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <h2>\\n          {{course.title}}\\n        </h2>\\n      </div>\\n      <div class=\\\"col align-content-end\\\">\\n        <button routerLink=\\\"/profile\\\"\\n                class=\\\"btn btn-primary btn\\\"\\n                *ngIf=\\\"loggedIn\\\">\\n          Profile\\n        </button>\\n      </div>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../Models/course.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private userService: UserServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourseId(params['courseId']));\n  }\n  course: Course = new Course();\n  loggedIn = false;\n\n  loadCourseId(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n    this.userService.profile()\n      .then(() => this.loggedIn = true,\n        () => this.loggedIn = false);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  {{message}}\\n</h1>\\n<ul>\\n  <li *ngFor='let course of courses'>\\n    {{course.title}}\\n\\n    <button (click)='deleteCourse(course.id)'\\n            class=\\\"btn btn-danger\\\">\\n      Delete\\n    </button>\\n  </li>\\n</ul>\\n\\n<!--<input [(ngModule)]='courseTitle'-->\\n       <!--class=\\\"form-control\\\"/>-->\\n<!--<button class=\\\"btn btn-success\\\"-->\\n        <!--(click)='addCourse(courseTitle)'>-->\\n  <!--Add Course-->\\n<!--</button>-->\\n\"","import {Component, NgModule, OnInit} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-hello-world-two',\n  templateUrl: './hello-world-two.component.html',\n  styleUrls: ['./hello-world-two.component.css']\n})\n@NgModule({\n  imports: [\n    FormsModule\n  ],\n})\n\nexport class HelloWorldTwoComponent implements OnInit {\n  message = 'Hello World Component';\n  courses = [\n    {title: 'CS5200', id: 123},\n    {title: 'CS5610', id: 234},\n    {title: 'CS3200', id: 345},\n    {title: 'CS4550', id: 456}\n  ];\n  courseTitle: string;\n\n  deleteCourse(courseId) {\n    this.courses =\n      this.courses\n        .filter(course =>\n          course.id !== courseId);\n  }\n  addCourse(courseTitle) {\n    const largestId = Math.max.apply(\n      Math, this.courses.map(\n        function(course) {\n          return course.id; }));\n    this.courses.push({title: courseTitle, id: largestId + 1});\n    this.courseTitle = '';\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonServiceClient} from '../services/lesson.service.client';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.moduleId);\n  }\n\n  loadLessons(moduleId) {\n    this.moduleId = moduleId;\n    console.log(moduleId);\n    this.service.findLessonsForModule(moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n<div>\\n  <label for=\\\"username\\\">Username</label>\\n  <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\" id=\\\"username\\\"/>\\n\\n  <label for=\\\"password\\\">Passwrod</label>\\n  <input [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"/>\\n\\n  <button (click)=\\\"login(username, password)\\\" class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n</div>\\n\\n  <div class=\\\"dropdown-divider\\\"></div>\\n  <a routerLink=\\\"/register\\\">Register</a>\\n  <a routerLink=\\\"/home\\\" class=\\\"float-right\\\">Home</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    this.service\n      .login(username, password)\n      .then((response) => response.json()\n            .then((r) => {\n              if (r == null) {\n                alert('Wrong credentials! Try Again!');\n              } else {\n                this.router.navigate(['profile']);\n              }\n            })\n        // , () => alert('Wrong credentials! Try Again!')\n      );\n  }\n\n  constructor(private router: Router, private service: UserServiceClient) { }\n\n  ngOnInit() {}\n}\n","module.exports = \".active.wbdv {\\n  background-color: red;\\n  border-color: red;\\n}\\n\\n.active.wbdv a {\\n  color: white;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input [(ngModel)]=\\\"username\\\"\\n             placeholder=\\\"username\\\"\\n             readonly\\n             class=\\\"form-control\\\"\\n             id=\\\"username\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstname\\\">First Name</label>\\n      <input [(ngModel)]=\\\"firstName\\\"\\n             placeholder=\\\"first name\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"firstname\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastname\\\">Last Name</label>\\n      <input [(ngModel)]=\\\"lastName\\\"\\n             placeholder=\\\"lastName\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"lastname\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input [(ngModel)]=\\\"email\\\"\\n             placeholder=\\\"email\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"email\\\"/>\\n    </div>\\n\\n    <button (click)=\\\"update()\\\"\\n            class=\\\"btn btn-primary btn-block\\\">\\n      Update\\n    </button>\\n  </div>\\n\\n  <div class=\\\"dropdown-divider\\\"></div>\\n\\n  <h2>Enrolled Sections</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n\\n      <a routerLink=\\\"/course/{{enrollment.section.courseId}}\\\">\\n        {{enrollment.section.name}}\\n        ({{enrollment.section.seats}} seats available)\\n      </a>\\n\\n    </li>\\n  </ul>\\n\\n  <div class=\\\"dropdown-divider\\\"></div>\\n\\n  <button  routerLink=\\\"/home\\\"\\n           class=\\\"btn btn-primary btn\\\">\\n    Home\\n  </button>\\n  <button  (click)=\\\"logout()\\\"\\n           class=\\\"btn btn-danger btn float-right\\\">\\n    Logout\\n  </button>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private router: Router) { }\n\n  username;\n  firstName;\n  lastName;\n  email;\n  sections = [];\n  user = {};\n\n  setUser() {\n    this.user = {\n      username: this.username,\n      info: {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email\n      }\n    };\n  }\n\n  update() {\n    this.setUser();\n    this.service.update(this.user).then(() => alert('Update complete!'));\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n  fill(user) {\n    this.username = user.username;\n    this.firstName = user.firstName;\n    this.lastName = user.lastName;\n    this.email = user.email;\n  }\n\n  ngOnInit() {\n    this.service.profile()\n      .then(user => this.fill(user),\n        () => this.router.navigate(['login']));\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n\\n  <label for=\\\"username\\\">Username</label>\\n  <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" required=\\\"required\\\" class=\\\"form-control\\\" id=\\\"username\\\"/>\\n\\n  <label for=\\\"password\\\">Password</label>\\n  <input [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\" required=\\\"required\\\" class=\\\"form-control\\\" id=\\\"password\\\"/>\\n\\n  <label for=\\\"password2\\\">Verify Password</label>\\n  <input [(ngModel)]=\\\"password2\\\" placeholder=\\\"verify password\\\" required=\\\"required\\\" class=\\\"form-control\\\" id=\\\"password2\\\"/>\\n\\n  <button (click)=\\\"register(username, password, password2)\\\" class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n  <a routerLink=\\\"/login\\\">Login</a>\\n  <a routerLink=\\\"/home\\\" class=\\\"float-right\\\">Home</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n\n  register(username, password, password2) {\n    if (password !== password2) {\n      alert('Passwords do not match!');\n    } else {\n      this.service.findUserByUsername(username)\n        .then(() => alert('existing username!'),\n          () =>\n            this.service.createUser(username, password)\n              .then(() =>\n                this.router.navigate(['profile'])));\n    }\n  }\n\n  ngOnInit() { }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <h1>Sections for course: {{courseId}}</h1>\\n\\n  <input [(ngModel)]=\\\"sectionName\\\" placeholder=\\\"Section Name\\\" class=\\\"form-control\\\">\\n\\n  <input [(ngModel)]=\\\"seats\\\" placeholder=\\\"Seats available\\\" class=\\\"form-control\\\">\\n\\n  <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n    Add Section\\n  </button>\\n\\n  <ul class=\\\"list-group\\\">\\n\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n\\n      {{section.name}} {{section.seats}}\\n\\n      <button (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n    </li>\\n\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient, private router: Router, private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  createSection(sectionName, seats) {\n    this\n      .service\n      .createSection(this.courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  enroll(section) {\n    // alert(section._id);\n    this.service\n      .enrollStudentInSection(section._id)\n      .then(() => {\n        this.router.navigate(['profile']);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class CourseNavigatorServiceClient {\n  findAllCourses() {\n    return fetch\n    ('http://localhost:8080/api/course')\n      .then(response => response.json());\n  }\n  findModulesForCourse(courseId) {\n    return fetch\n    ('http://localhost:8080/api/course/'\n      + courseId + '/module')\n      .then(response => response.json());\n  }\n  findLessonsForModule(moduleId) {\n    return fetch\n    ('http://localhost:8080/api/module/'\n      + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n  findWidgetsForLesson(lessonId) {\n    return fetch\n    ('http://localhost:8080/api/lesson/'\n      + lessonId + '/widget')\n      .then(response => response.json());\n  }\n\n\n}\n","\nexport class CourseServiceClient {\n  COURSE_URL = 'http://localhost:8080/api/course';\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n  findCourseById(courseId) {\n    return fetch(this.COURSE_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n}\n","export class LessonServiceClient {\n  findLessonsForModule(moduleId) {\n    return fetch('http://localhost:8080/api/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n}\n","export class ModuleServiceClient {\n  MODULE_URL = 'http://localhost:8080/api/course/COURSE_ID/module';\n  findModulesForCourse(courseId) {\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\n      .then(response => response.json());\n  }\n}\n","export class SectionServiceClient {\n\n  SECTION_URL = 'http://localhost:4000/api/course/COURSEID/section';\n\n  findSectionsForStudent() {\n    const url = 'http://localhost:4000/api/student/section';\n    return fetch(url, {\n      credentials: 'include'\n    })\n      .then(response => response.json());\n  }\n\n  enrollStudentInSection(sectionId) {\n    const url = 'http://localhost:4000/api/section/' + sectionId + '/enrollment';\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\n      .then(response => response.json());\n  }\n\n  createSection(courseId, name, seats) {\n    const section = {courseId, name, seats};\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","const remoteURL = 'http://webdev-node-hw.herokuapp.com/api';\nconst localURL = 'http://localhost:4000/api/';\n\n\nexport class UserServiceClient {\n\n  findUserById(userId) {\n    return fetch(remoteURL + 'user/' + userId)\n      .then(response => response.json());\n  }\n\n  findUserByUsername(username) {\n    return fetch(remoteURL + 'username/' + username)\n      .then(response => response.json());\n  }\n\n  login(username, password) {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch(remoteURL + 'login', {\n      method: 'post',\n      body: JSON.stringify(credentials),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  logout() {\n    return fetch(remoteURL + 'logout', {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  profile() {\n    return fetch(remoteURL + 'profile',\n      {\n        credentials: 'include', // include, same-origin, *omit\n      })\n      .then(response => response.json());\n  }\n\n  createUser(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch(remoteURL + 'user', {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  update(user) {\n    return fetch(remoteURL + 'user', {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","export class WidgetServiceClient {\n  findWidgetsForLesson(lessonId) {\n    return fetch('http://localhost:8080/api/lesson/' + lessonId + '/widget')\n      .then(response => response.json());\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>White Board</h1>\\n  <div>\\n    <button routerLink=\\\"/login\\\"\\n            class=\\\"btn btn-primary btn\\\"\\n            *ngIf=\\\"loggedIn\\\">\\n      Login\\n    </button>\\n    &nbsp;&nbsp;&nbsp;\\n    <button routerLink=\\\"/register\\\"\\n            class=\\\"btn btn-success btn\\\"\\n            *ngIf=\\\"loggedIn\\\">\\n      Register\\n    </button>\\n\\n    <button routerLink=\\\"/profile\\\"\\n            class=\\\"btn btn-primary btn\\\"\\n            *ngIf=\\\"notLoggedIn\\\">\\n      Profile\\n    </button>\\n  </div>\\n  <div class=\\\"dropdown-divider\\\"></div>\\n  <h3>Currently Enrolled</h3>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n\\n      <a routerLink=\\\"/course/{{enrollment.section.courseId}}\\\">\\n        {{enrollment.section.name}}\\n        ({{enrollment.section.seats}} seats available)\\n      </a>\\n\\n    </li>\\n  </ul>\\n\\n  <div class=\\\"dropdown-divider\\\"></div>\\n  <app-course-grid></app-course-grid>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-whiteboard',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient) {\n  }\n\n  login;\n  loggedIn = false;\n  notLoggedIn = false;\n  sections = [];\n\n  ngOnInit() {\n    this.service.profile()\n      .then(() => {\n        this.loggedIn = false;\n        this.notLoggedIn = true;\n        },\n        () => {\n        this.loggedIn = true;\n        this.notLoggedIn = false;\n      });\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'HeadingWidget'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n        <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\n        <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\n        <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'LinkWidget'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'ListWidget'\\\">\\n      <h1>ListWidget</h1>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\"\\n            *ngFor=\\\"let item of widget.items.split('|')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Exam'\\\">\\n      <h1>Exam Widget</h1>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.lessonId);\n  }\n  loadWidgets(lessonId) {\n    this.service.findWidgetsForLesson(lessonId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}